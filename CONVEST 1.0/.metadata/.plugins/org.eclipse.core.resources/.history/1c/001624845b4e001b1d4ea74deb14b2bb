package preparations;

import org.neo4j.driver.*;
import org.neo4j.driver.types.Node;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class GetNodes {

    static Driver driver = null;

    public static void getDriver(){
        String uri = "Bolt://localhost:7687";
        String user = "neo4j";//鍐欎綘鑷繁鐨刵eo4j鐨勭敤鎴峰悕
        String password = "991117";//鍐欎綘鑷繁鐨刵eo4j鐨勫瘑鐮�
        driver = GraphDatabase.driver(uri, AuthTokens.basic(user,password));
    }

    public static void close(){
        if(driver!=null){
            driver.close();
        }
    }

    //node
    public static void getNodesInfo(String cypher){
        getDriver();

        Map<String,String> node_AttrKey_AttrValue_Map = new HashMap<>();

        try(Session session = driver.session()){
            Result result = session.run(cypher);

            while(result.hasNext()){
                Record record = result.next();
                List<Value> value = record.values();

                for(Value i:value){
                    Node node = i.asNode();
                    Iterator keys = node.keys().iterator();

                    Iterator nodeTypes = node.labels().iterator();
                    String nodeType = nodeTypes.next().toString();
                    System.out.println("鑺傜偣绫诲瀷锛�"+nodeType);
                    System.out.println("鑺傜偣灞炴�у涓嬶細");
                    while(keys.hasNext()){
                        String attrKey = (String)keys.next();
                        String attrValue = node.get(attrKey).asString();
                        System.out.println(attrKey+"-------"+attrValue);
                    }
                    System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                }
            }
        }
        close();
    }

    public static void main(String... args){
        System.out.println("hello");
        String cypher = "match (n:鏁版嵁搴撶珷鑺倇鍚嶇О:'鍏崇郴鏁版嵁搴�'}) return n";
        getNodesInfo(cypher);

    }

}
